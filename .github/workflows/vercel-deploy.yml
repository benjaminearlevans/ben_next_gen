name: Vercel Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || '' }}
  VERCEL_PROJECT_ID: prj_CcTaaz0ak82sLnjGif35dl28LMnT

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint --if-present
        
      - name: Run tests
        run: npm test --if-present
        
      - name: Type check
        run: npm run type-check --if-present

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || '' }}
          VERCEL_PROJECT_ID: prj_CcTaaz0ak82sLnjGif35dl28LMnT
        
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          DIRECTUS_URL: ${{ secrets.DIRECTUS_URL || '' }}
          DIRECTUS_TOKEN: ${{ secrets.DIRECTUS_TOKEN || '' }}
          GATSBY_SITE_ID: ${{ secrets.GATSBY_SITE_ID || 'preview' }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || '' }}
          VERCEL_PROJECT_ID: prj_CcTaaz0ak82sLnjGif35dl28LMnT
        
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          DIRECTUS_URL: ${{ secrets.DIRECTUS_URL || '' }}
          DIRECTUS_TOKEN: ${{ secrets.DIRECTUS_TOKEN || '' }}
          GATSBY_SITE_ID: staging
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || '' }}
          VERCEL_PROJECT_ID: prj_CcTaaz0ak82sLnjGif35dl28LMnT
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          DIRECTUS_URL: ${{ secrets.DIRECTUS_URL || '' }}
          DIRECTUS_TOKEN: ${{ secrets.DIRECTUS_TOKEN || '' }}
          GATSBY_SITE_ID: ${{ secrets.GATSBY_SITE_ID || 'main' }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://your-project.vercel.app
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
