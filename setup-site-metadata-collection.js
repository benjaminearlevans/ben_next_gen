const { Directus } = require('@directus/sdk');
require('dotenv').config({ path: '.env.development' });

const directus = new Directus(process.env.DIRECTUS_URL);

async function setupSiteMetadataCollection() {
  try {
    // Authenticate
    await directus.auth.login({
      email: process.env.DIRECTUS_ADMIN_EMAIL,
      password: process.env.DIRECTUS_ADMIN_PASSWORD,
    });

    console.log('Setting up site metadata collection...');

    // Create site_metadata collection as singleton
    const metadataCollection = await directus.collections.createOne({
      collection: 'site_metadata',
      meta: {
        accountability: 'all',
        collection: 'site_metadata',
        group: null,
        hidden: false,
        icon: 'settings',
        item_duplication_fields: null,
        note: 'Global site settings and metadata',
        singleton: true,
        translations: null,
      },
      schema: {
        name: 'site_metadata',
      },
    });

    console.log('Site metadata collection created');

    // Create fields for site metadata collection
    const fields = [
      {
        collection: 'site_metadata',
        field: 'id',
        type: 'integer',
        meta: {
          collection: 'site_metadata',
          field: 'id',
          special: null,
          interface: 'input',
          options: null,
          display: null,
          display_options: null,
          readonly: true,
          hidden: true,
          sort: 1,
          width: 'full',
          translations: null,
          note: null,
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'id',
          table: 'site_metadata',
          data_type: 'integer',
          default_value: null,
          max_length: null,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: false,
          is_unique: false,
          is_primary_key: true,
          has_auto_increment: true,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'site_title',
        type: 'string',
        meta: {
          collection: 'site_metadata',
          field: 'site_title',
          special: null,
          interface: 'input',
          options: null,
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 2,
          width: 'full',
          translations: null,
          note: 'The main title of your website',
          conditions: null,
          required: true,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'site_title',
          table: 'site_metadata',
          data_type: 'varchar',
          default_value: null,
          max_length: 255,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: false,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'site_description',
        type: 'text',
        meta: {
          collection: 'site_metadata',
          field: 'site_description',
          special: null,
          interface: 'input-multiline',
          options: null,
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 3,
          width: 'full',
          translations: null,
          note: 'A brief description of your website for SEO',
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'site_description',
          table: 'site_metadata',
          data_type: 'text',
          default_value: null,
          max_length: null,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: true,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'site_url',
        type: 'string',
        meta: {
          collection: 'site_metadata',
          field: 'site_url',
          special: null,
          interface: 'input',
          options: {
            placeholder: 'https://example.com'
          },
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 4,
          width: 'half',
          translations: null,
          note: 'The full URL of your website',
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'site_url',
          table: 'site_metadata',
          data_type: 'varchar',
          default_value: null,
          max_length: 500,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: true,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'author_name',
        type: 'string',
        meta: {
          collection: 'site_metadata',
          field: 'author_name',
          special: null,
          interface: 'input',
          options: null,
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 5,
          width: 'half',
          translations: null,
          note: 'The name of the site author/owner',
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'author_name',
          table: 'site_metadata',
          data_type: 'varchar',
          default_value: null,
          max_length: 255,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: true,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'social_twitter',
        type: 'string',
        meta: {
          collection: 'site_metadata',
          field: 'social_twitter',
          special: null,
          interface: 'input',
          options: {
            placeholder: '@username'
          },
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 6,
          width: 'half',
          translations: null,
          note: 'Twitter handle (include @)',
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'social_twitter',
          table: 'site_metadata',
          data_type: 'varchar',
          default_value: null,
          max_length: 255,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: true,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'social_linkedin',
        type: 'string',
        meta: {
          collection: 'site_metadata',
          field: 'social_linkedin',
          special: null,
          interface: 'input',
          options: {
            placeholder: 'https://linkedin.com/in/username'
          },
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 7,
          width: 'half',
          translations: null,
          note: 'LinkedIn profile URL',
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'social_linkedin',
          table: 'site_metadata',
          data_type: 'varchar',
          default_value: null,
          max_length: 500,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: true,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'hero_title',
        type: 'string',
        meta: {
          collection: 'site_metadata',
          field: 'hero_title',
          special: null,
          interface: 'input',
          options: null,
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 8,
          width: 'full',
          translations: null,
          note: 'Main headline for the homepage hero section',
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'hero_title',
          table: 'site_metadata',
          data_type: 'varchar',
          default_value: null,
          max_length: 500,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: true,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      },
      {
        collection: 'site_metadata',
        field: 'hero_subtitle',
        type: 'text',
        meta: {
          collection: 'site_metadata',
          field: 'hero_subtitle',
          special: null,
          interface: 'input-multiline',
          options: null,
          display: null,
          display_options: null,
          readonly: false,
          hidden: false,
          sort: 9,
          width: 'full',
          translations: null,
          note: 'Subtitle or description for the homepage hero section',
          conditions: null,
          required: false,
          group: null,
          validation: null,
          validation_message: null,
        },
        schema: {
          name: 'hero_subtitle',
          table: 'site_metadata',
          data_type: 'text',
          default_value: null,
          max_length: null,
          numeric_precision: null,
          numeric_scale: null,
          is_nullable: true,
          is_unique: false,
          is_primary_key: false,
          has_auto_increment: false,
          foreign_key_column: null,
          foreign_key_table: null,
          comment: '',
        },
      }
    ];

    // Create each field
    for (const field of fields) {
      await directus.fields.createOne(field);
      console.log(`Created field: ${field.field}`);
    }

    console.log('Site metadata collection setup complete!');

    // Create default site metadata
    const defaultMetadata = {
      site_title: 'Benjamin Carlson',
      site_description: 'Personal website and blog of Benjamin Carlson - developer, speaker, and content creator.',
      site_url: 'https://benjamincarlson.io',
      author_name: 'Benjamin Carlson',
      social_twitter: '@benjamincarlson',
      social_linkedin: 'https://linkedin.com/in/benjamin-carlson',
      hero_title: 'Hi, I\'m Benjamin Carlson',
      hero_subtitle: 'I\'m a developer, speaker, and content creator passionate about building great web experiences.'
    };

    // Insert default site metadata
    await directus.items('site_metadata').createOne(defaultMetadata);
    console.log('Default site metadata created!');

  } catch (error) {
    console.error('Error setting up site metadata collection:', error);
  }
}

setupSiteMetadataCollection();
